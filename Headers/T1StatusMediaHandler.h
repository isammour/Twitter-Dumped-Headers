//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import <T1Twitter/T1AutoplayFullscreenCoordinator-Protocol.h>
#import <T1Twitter/T1VideoBitRateManagerDelegate-Protocol.h>
#import <T1Twitter/TFNTwitterAVPlayerControllerSource-Protocol.h>
#import <T1Twitter/TFNTwitterAmplifyPlayerDelegate-Protocol.h>

@class NSMapTable, NSMutableArray, NSMutableSet, NSSet, NSString, T1VideoBitRateManager, TFNDataViewController, TFNTwitterAVPlayerController, TFNTwitterAccount, TFSTimer;
@protocol TFNTwitterAVPlayerControllerSource;

@interface T1StatusMediaHandler : NSObject <T1VideoBitRateManagerDelegate, T1AutoplayFullscreenCoordinator, TFNTwitterAmplifyPlayerDelegate, TFNTwitterAVPlayerControllerSource>
{
    _Bool _autoplayEnabled;
    _Bool _autoplayEnabledForPromotedTweets;
    _Bool _videoDynamicAdEnabled;
    _Bool _fetchDynamicAdForEachStatus;
    _Bool _videoWebsiteCardEnabled;
    _Bool _autoplayUpdateTimerRunning;
    _Bool _shouldForceAutoplay;
    id <TFNTwitterAVPlayerControllerSource> _playerSource;
    NSSet *_autoplayPublisherBlacklist;
    double _autoplayStartPlayerViewVisibleYFraction;
    double _autoplaySuspendUpdateSpeed;
    TFSTimer *_autoplayUpdateTimer;
    NSMapTable *_subViewControllerToOffsetMap;
    NSMapTable *_recentPlayerViewContainerCells;
    NSMapTable *_viewControllerToSlideshowPresenterMap;
    T1VideoBitRateManager *_videoBitRateManager;
    TFNTwitterAVPlayerController *_currentAutoplayPlayer;
    TFNDataViewController *_dataViewController;
    NSMutableArray *_pendingRemovalPlayerViewContainerCells;
    TFNTwitterAVPlayerController *_playerAwaitingReturn;
    long long _modeForPlayerAwaitingReturn;
    id _presentedSlideshow;
    NSMutableSet *_statusesDisplayedAfterPause;
    NSMutableArray *_visiblePlayerViewContainerCells;
    double _lastVerticalScrollSpeedUpdateTime;
    double _verticalScrollSpeed;
    struct CGPoint _lastAutoplayUpdateContentOffset;
    struct CGPoint _lastVerticalScrollSpeedUpdateContentOffset;
}

+ (_Bool)_playerTypeIsAmplify:(id)arg1;
+ (id)statusMediaHandlerForDataViewController:(id)arg1;
@property(nonatomic) double verticalScrollSpeed; // @synthesize verticalScrollSpeed=_verticalScrollSpeed;
@property(nonatomic) double lastVerticalScrollSpeedUpdateTime; // @synthesize lastVerticalScrollSpeedUpdateTime=_lastVerticalScrollSpeedUpdateTime;
@property(nonatomic) struct CGPoint lastVerticalScrollSpeedUpdateContentOffset; // @synthesize lastVerticalScrollSpeedUpdateContentOffset=_lastVerticalScrollSpeedUpdateContentOffset;
@property(nonatomic) struct CGPoint lastAutoplayUpdateContentOffset; // @synthesize lastAutoplayUpdateContentOffset=_lastAutoplayUpdateContentOffset;
@property(readonly, nonatomic) NSMutableArray *visiblePlayerViewContainerCells; // @synthesize visiblePlayerViewContainerCells=_visiblePlayerViewContainerCells;
@property(readonly, nonatomic) NSMutableSet *statusesDisplayedAfterPause; // @synthesize statusesDisplayedAfterPause=_statusesDisplayedAfterPause;
@property(nonatomic) __weak id presentedSlideshow; // @synthesize presentedSlideshow=_presentedSlideshow;
@property(nonatomic) _Bool shouldForceAutoplay; // @synthesize shouldForceAutoplay=_shouldForceAutoplay;
@property(nonatomic) long long modeForPlayerAwaitingReturn; // @synthesize modeForPlayerAwaitingReturn=_modeForPlayerAwaitingReturn;
@property(retain, nonatomic) TFNTwitterAVPlayerController *playerAwaitingReturn; // @synthesize playerAwaitingReturn=_playerAwaitingReturn;
@property(readonly, nonatomic) NSMutableArray *pendingRemovalPlayerViewContainerCells; // @synthesize pendingRemovalPlayerViewContainerCells=_pendingRemovalPlayerViewContainerCells;
@property(readonly, nonatomic) __weak TFNDataViewController *dataViewController; // @synthesize dataViewController=_dataViewController;
@property(retain, nonatomic) TFNTwitterAVPlayerController *currentAutoplayPlayer; // @synthesize currentAutoplayPlayer=_currentAutoplayPlayer;
@property(nonatomic) _Bool autoplayUpdateTimerRunning; // @synthesize autoplayUpdateTimerRunning=_autoplayUpdateTimerRunning;
@property(retain, nonatomic) T1VideoBitRateManager *videoBitRateManager; // @synthesize videoBitRateManager=_videoBitRateManager;
@property(retain, nonatomic) NSMapTable *viewControllerToSlideshowPresenterMap; // @synthesize viewControllerToSlideshowPresenterMap=_viewControllerToSlideshowPresenterMap;
@property(retain, nonatomic) NSMapTable *recentPlayerViewContainerCells; // @synthesize recentPlayerViewContainerCells=_recentPlayerViewContainerCells;
@property(retain, nonatomic) NSMapTable *subViewControllerToOffsetMap; // @synthesize subViewControllerToOffsetMap=_subViewControllerToOffsetMap;
@property(retain, nonatomic) TFSTimer *autoplayUpdateTimer; // @synthesize autoplayUpdateTimer=_autoplayUpdateTimer;
@property(readonly, nonatomic) _Bool videoWebsiteCardEnabled; // @synthesize videoWebsiteCardEnabled=_videoWebsiteCardEnabled;
@property(readonly, nonatomic) _Bool fetchDynamicAdForEachStatus; // @synthesize fetchDynamicAdForEachStatus=_fetchDynamicAdForEachStatus;
@property(readonly, nonatomic) _Bool videoDynamicAdEnabled; // @synthesize videoDynamicAdEnabled=_videoDynamicAdEnabled;
@property(readonly, nonatomic) double autoplaySuspendUpdateSpeed; // @synthesize autoplaySuspendUpdateSpeed=_autoplaySuspendUpdateSpeed;
@property(readonly, nonatomic) double autoplayStartPlayerViewVisibleYFraction; // @synthesize autoplayStartPlayerViewVisibleYFraction=_autoplayStartPlayerViewVisibleYFraction;
@property(readonly, nonatomic) NSSet *autoplayPublisherBlacklist; // @synthesize autoplayPublisherBlacklist=_autoplayPublisherBlacklist;
@property(readonly, nonatomic) _Bool autoplayEnabledForPromotedTweets; // @synthesize autoplayEnabledForPromotedTweets=_autoplayEnabledForPromotedTweets;
@property(readonly, nonatomic) _Bool autoplayEnabled; // @synthesize autoplayEnabled=_autoplayEnabled;
@property(nonatomic) __weak id <TFNTwitterAVPlayerControllerSource> playerSource; // @synthesize playerSource=_playerSource;
- (void).cxx_destruct;
- (_Bool)_isPlayer:(id)arg1 forPlayerID:(id)arg2;
- (_Bool)_isPlayer:(id)arg1 forSessionSource:(id)arg2;
- (long long)videoGravityForDismissTransitionFromPlayer:(id)arg1;
- (void)viewController:(id)arg1 didEndFullscreenPresentationWithPlayerIdentifiable:(id)arg2;
- (void)viewController:(id)arg1 willBeginFullscreenPresentationWithPlayerIdentifiable:(id)arg2;
- (void)willRelinquishPlayerOwnership:(id)arg1 fromOwner:(id)arg2;
- (void)relinquishPlayerOwnership:(id)arg1 fromOwner:(id)arg2;
- (id)requestPlayerOwnershipForPlayerID:(id)arg1 withAccount:(id)arg2 newOwner:(id)arg3;
- (id)playerForPlayerID:(id)arg1;
- (_Bool)private_isPlaybackManuallyTriggered;
- (void)private_updatePreferredPeakBitRate:(double)arg1;
- (void)updatePreferredPeakBitRateForFullScreen;
- (void)updatePreferredPeakBitRate:(id)arg1;
- (void)amplifyPlayer:(id)arg1 didUpdatePlaybackLikelyToKeepUp:(_Bool)arg2;
- (void)amplifyPlayer:(id)arg1 didUpdateItemStatus:(long long)arg2;
- (void)amplifyPlayer:(id)arg1 didReceiveTimedMetadata:(id)arg2;
- (void)amplifyPlayer:(id)arg1 videoTypeDidChangeFrom:(long long)arg2 newVideoType:(long long)arg3;
- (_Bool)avPlayerControllerShouldManagePlayerVolume:(id)arg1;
- (_Bool)avPlayerControllerShouldResumeOnAudioRouteChanges:(id)arg1;
- (_Bool)avPlayerControllerShouldHandleAudioRouteChanges:(id)arg1;
- (void)avPlayerControllerPlaybackDidResume:(id)arg1;
- (void)avPlayerControllerPlaybackDidPause:(id)arg1;
- (void)avPlayerControllerDidDispose:(id)arg1;
- (void)avPlayerController:(id)arg1 didTapPlayerView:(id)arg2;
- (void)avPlayerController:(id)arg1 playbackDidProgressToTime:(double)arg2;
- (void)avPlayerController:(id)arg1 didChangeFromMode:(long long)arg2 toMode:(long long)arg3;
- (void)avPlayerController:(id)arg1 didFailToLoadWithError:(id)arg2;
- (void)avPlayerControllerDidCompletePreparingForPlayback:(id)arg1;
- (_Bool)avPlayerControllerIsObscuredByOverlappingView:(id)arg1;
- (double)avPlayerController:(id)arg1 visibilityPercentageForPlayerView:(id)arg2;
- (void)_updatePlayerView:(id)arg1 forFinishingCustomCardAutoplayWithPlayerController:(id)arg2;
- (void)avPlayerController:(id)arg1 detachPlayerView:(id)arg2 animated:(_Bool)arg3;
- (void)_updatePlayerView:(id)arg1 forStartingCustomCardAutoplayWithPlayerController:(id)arg2;
- (void)avPlayerController:(id)arg1 attachPlayerView:(id)arg2 animated:(_Bool)arg3;
- (void)_didDeleteStatus:(id)arg1;
- (_Bool)_isLockedImageToVideoConversationCard:(id)arg1;
- (void)forceAutoplay;
- (void)_t1_dockingControllerDidDismissCurrentDockedView;
- (void)_updateAutoplayIfNeededOnVideoChangeInSource:(id)arg1;
- (id)_sessionSourceInNotification:(id)arg1;
- (_Bool)_isBroadcastPlayableInSource:(id)arg1;
- (_Bool)_isLiveEventPlayableInSource:(id)arg1;
- (void)_liveEventCardViewModelDidUpdateBroadcast:(id)arg1;
- (void)_customizePlayerConfiguration:(id)arg1 forLiveVideoPlaybackInSource:(id)arg2;
- (_Bool)_isLiveVideoPlayableInSource:(id)arg1;
- (void)_liveVideoCardViewModelEventLiveStateDidUpdate:(id)arg1;
- (_Bool)_isPeriscopePlayableInSource:(id)arg1;
- (void)_periscopeViewControllerDidPresent:(id)arg1;
- (void)_autoplayGifVineInitiateNewPlayerFromContainerCell:(struct UIView *)arg1;
- (void)_autoplayNativeVideoInitiateNewPlayerFromContainerCell:(struct UIView *)arg1;
- (_Bool)_shouldAutoplayNativeVideoFromSource:(id)arg1;
- (void)private_stopPlaybackIndicatorsForAllCellsOtherThanCurrentCell:(struct UIView *)arg1;
- (void)_attachPlayerView:(id)arg1 toContainerCell:(struct UIView *)arg2 forPlayerController:(id)arg3 animated:(_Bool)arg4;
- (id)_activeCardViewForPlayerSessionSource:(id)arg1;
- (void)_configureCurrentAutoplayPlayerWithController:(id)arg1 mode:(long long)arg2;
- (id)_buildScribeContextWithController:(id)arg1 withSource:(id)arg2;
@property(readonly, nonatomic) long long currentAutoplayVideoType;
- (void)playerViewContainerCellDidUpdate:(struct UIView *)arg1;
- (struct UIView *)_playerViewContainerCellWithSessionSource:(id)arg1;
- (struct UIView *)_playerViewContainerCellWithPlayerID:(id)arg1;
- (_Bool)_playerView:(id)arg1 inViewportForController:(id)arg2 withYFraction:(double)arg3;
- (_Bool)_playerView:(id)arg1 partiallyVisibleInController:(id)arg2;
- (_Bool)_playerViewContainerCell:(struct UIView *)arg1 partiallyVisibleInController:(id)arg2;
- (_Bool)_autoplayDisabledForSource:(id)arg1 account:(id)arg2;
- (struct UIView *)_closestAutoplayablePlayerViewContainerCellForController:(id)arg1;
- (struct UIView *)private_enclosingCellForMediaView:(id)arg1;
- (void)_updateAutoplay;
- (_Bool)_haveSubViewControllerOffsetsChanged;
- (void)_resetSubViewControllerOffsets;
- (void)_updateSubViewControllerOffsets;
- (_Bool)_haveViewControllersScrolled;
- (_Bool)_shouldUpdateAutoplay;
- (void)_updateVerticalScrollSpeed;
- (void)_autoplayTimerTick;
- (_Bool)private_dataViewControllerIsInvisible;
- (void)_startAutoplayUpdateTimer;
- (void)_pauseAutoplayUpdateTimer;
- (void)_disposeAutoplayUpdateTimer;
- (void)_autoplaySettingsDidChange;
- (void)_autoplayResumeCurrentPlayerIfNeeded;
- (void)_autoplayResetScrollStates;
- (void)_autoplayDisposeCurrentPlayer;
- (void)_removeTrackedContainerCells;
- (_Bool)_sourceMediaIsPlayableInCell:(struct UIView *)arg1;
- (void)didEndDisplayingPlayerViewContainerCell:(struct UIView *)arg1;
- (void)didDisplayPlayerViewContainerCell:(struct UIView *)arg1;
- (id)_t1_autoplayableViewInCell:(struct UIView *)arg1;
- (id)_t1_inlineMediaViewInCell:(struct UIView *)arg1;
- (void)willDisplayPlayerViewContainerCell:(struct UIView *)arg1;
- (void)addSlideshowPresenter:(id)arg1 forViewController:(id)arg2;
- (id)slideshowPresenterForViewController:(id)arg1;
@property(readonly, nonatomic) TFNTwitterAccount *account;
- (void)_applicationWillResign;
- (void)private_applicationDidBecomeActive;
- (id)presentPlayerFromPlayerViewContainerCell:(struct UIView *)arg1 status:(id)arg2 previewing:(_Bool)arg3;
- (void)dealloc;
- (void)addSubDataViewController:(id)arg1;
- (void)mainDataViewControllerWillDisappear:(id)arg1;
- (void)_updateFeatureSwitches;
- (void)_t1_setupAutoplayManager;
- (id)initWithMainDataViewController:(id)arg1;
- (void)autoplayableManagerDidUpdateActive;
- (_Bool)shouldAutoplayableManagerUpdateActive;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

