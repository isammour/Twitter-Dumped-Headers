//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

@class NSLayoutAnchor;

@interface UIView (PTVAutoLayoutHelpers)
@property(nonatomic) _Bool ptv_insetsLayoutMarginsFromSafeArea;
- (struct CGRect)_ptv_systemSafeAreaGetWindow:(out id *)arg1;
@property(readonly) struct UIEdgeInsets ptv_systemSafeAreaInsets;
@property(readonly) struct UIEdgeInsets ptv_safeAreaInsets;
@property(readonly) NSLayoutAnchor *ptv_safeLeftAnchor;
@property(readonly) NSLayoutAnchor *ptv_safeRightAnchor;
@property(readonly) NSLayoutAnchor *ptv_safeTrailingAnchor;
@property(readonly) NSLayoutAnchor *ptv_safeLeadingAnchor;
@property(readonly) NSLayoutAnchor *ptv_safeBottomAnchor;
@property(readonly) NSLayoutAnchor *ptv_safeTopAnchor;
- (void)ptv_addAutoLayoutSubviews:(id)arg1 constraints:(id)arg2;
- (void)ptv_addAutoLayoutSubviews:(id)arg1;
- (void)see_constrainToEdgesOfView:(id)arg1;
- (void)see_constrainToMarginsOfView:(id)arg1;
- (void)see_constrainHorizontalEdgesToMarginsOfView:(id)arg1;
- (void)see_constrainVerticalEdgesToMarginsOfView:(id)arg1;
- (id)see_ancestorSharedWithView:(id)arg1;
- (void)see_constrainSidesToView:(id)arg1;
- (id)see_constrainBottomToMarginOfView:(id)arg1;
- (id)see_constrainTopToMarginOfView:(id)arg1;
- (id)see_constrainBottomToView:(id)arg1;
- (id)see_constrainTopToView:(id)arg1;
- (id)see_constrain:(long long)arg1 to:(long long)arg2 ofView:(id)arg3 offsetBy:(double)arg4 activate:(_Bool)arg5;
- (id)see_constrain:(long long)arg1 to:(long long)arg2 ofView:(id)arg3 offsetBy:(double)arg4;
- (id)see_constrain:(long long)arg1 toView:(id)arg2 offsetBy:(double)arg3;
- (id)see_constrain:(long long)arg1 to:(long long)arg2 ofView:(id)arg3;
- (id)see_constrain:(long long)arg1 toView:(id)arg2;
- (id)see_constrain:(long long)arg1 toBe:(long long)arg2 to:(long long)arg3 ofView:(id)arg4 offsetBy:(double)arg5 priority:(float)arg6 activate:(_Bool)arg7;
- (id)see_constrain:(long long)arg1 toValue:(double)arg2;
- (id)see_constrain:(long long)arg1 toValue:(double)arg2 priority:(float)arg3;
- (id)see_constrain:(long long)arg1 toBe:(long long)arg2 toValue:(double)arg3 priority:(float)arg4;
@end

