//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <TwitterNetworkLayer/NSURLSessionDataDelegate-Protocol.h>
#import <TwitterNetworkLayer/NSURLSessionDownloadDelegate-Protocol.h>
#import <TwitterNetworkLayer/TNLURLSessionManager-Protocol.h>

@class NSString;

@interface TNLURLSessionManagerV1 : NSObject <NSURLSessionDataDelegate, NSURLSessionDownloadDelegate, TNLURLSessionManager>
{
}

+ (id)internalSharedInstance;
+ (long long)version;
@property long long serviceUnavailableBackoffMode;
- (void)serviceUnavailableEncounteredForURL:(id)arg1 retryAfterDelay:(double)arg2;
- (void)applyServiceUnavailableBackoffDependenciesToOperation:(id)arg1 withURL:(id)arg2 isLongPollRequest:(_Bool)arg3;
- (void)syncAddURLSessionTaskOperation:(id)arg1;
- (void)URLSessionDidCompleteBackgroundTask:(unsigned long long)arg1 sessionConfigIdentifier:(id)arg2 sharedContainerIdentifier:(id)arg3 request:(id)arg4 response:(id)arg5;
- (void)URLSessionDidCompleteBackgroundEvents:(id)arg1;
- (_Bool)handleBackgroundURLSessionEvents:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)findURLSessionTaskOperationForRequestOperationQueue:(id)arg1 requestOperation:(id)arg2 complete:(CDUnknownBlockType)arg3;
- (void)cancelAllWithSource:(id)arg1 underlyingError:(id)arg2;
- (id)initInternal;
- (void)synchronize_serviceUnavailableEncounteredForURL:(id)arg1 retryAfterDelay:(double)arg2;
- (void)synchronize_applyServiceUnavailableBackoffDependenciesToOperation:(id)arg1 withURL:(id)arg2 isLongPollRequest:(_Bool)arg3;
- (void)synchronize_prune;
- (void)synchronize_removeContext:(id)arg1;
- (void)synchronize_storeContext:(id)arg1;
- (id)synchronize_contextForURLSessionConfigurationIdentifier:(id)arg1;
- (id)synchronize_contextForURLSession:(id)arg1;
- (id)synchronize_contextForRequestOperationQueue:(id)arg1 requestConfiguration:(id)arg2 executionMode:(long long)arg3 createIfNeeded:(_Bool)arg4;
- (void)synchronize_dissassociateURLSessionTaskOperation:(id)arg1;
- (id)synchronize_associateURLSessionTaskOperation:(id)arg1 withRequestOperationQueue:(id)arg2;
- (void)synchronize_findURLSessionTaskOperationForRequestOperationQueue:(id)arg1 requestOperation:(id)arg2 complete:(CDUnknownBlockType)arg3;
- (void)executeOnSynchronizeGCDQueueFromSynchronizeOperationQueue:(CDUnknownBlockType)arg1;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didResumeAtOffset:(long long)arg3 expectedTotalBytes:(long long)arg4;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didWriteData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didFinishDownloadingToURL:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 willCacheResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5;
- (void)URLSession:(id)arg1 task:(id)arg2 needNewBodyStream:(CDUnknownBlockType)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 willPerformHTTPRedirection:(id)arg3 newRequest:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(id)arg1;
- (void)private_handleAuthChallenge:(id)arg1 session:(id)arg2 operation:(id)arg3 currentDisposition:(id)arg4 remainingAuthChallengeHandlers:(id)arg5 completion:(CDUnknownBlockType)arg6;
- (void)URLSession:(id)arg1 didReceiveChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)URLSession:(id)arg1 didBecomeInvalidWithError:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

