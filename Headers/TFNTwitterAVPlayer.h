//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <AVFoundation/AVPlayer.h>

@class NSDate, NSString, NSTimer, TFNTwitterAVPlayerControllerVideo, TFSKVODispatcher;
@protocol TFNTwitterAVPlayerDelegate;

@interface TFNTwitterAVPlayer : AVPlayer
{
    NSString *_mediaURL;
    NSTimer *_playbackTimer;
    CDStruct_1b6d18a9 _lastContinuousPlaybackCMTime;
    float _playerVolume;
    TFSKVODispatcher *_presentationSizeKVODispatcher;
    TFSKVODispatcher *_durationKVODispatcher;
    double _cachedPreferredForwardBufferDuration;
    _Bool _limitBufferingOnAllPlayerItems;
    _Bool _limitBufferingAggressivelyOnPausedItems;
    _Bool _didPlaybackStall;
    _Bool _timerRunning;
    float _currentRate;
    double _accumulativeContinuousPlaybackTime;
    double _furthestPlaybackTime;
    id <TFNTwitterAVPlayerDelegate> _delegate;
    TFNTwitterAVPlayerControllerVideo *_video;
    double _currentItemDuration;
    NSDate *_lastTimerFireDateWithNormalPlayback;
    struct CGSize _playerContentSize;
}

@property(copy, nonatomic) NSDate *lastTimerFireDateWithNormalPlayback; // @synthesize lastTimerFireDateWithNormalPlayback=_lastTimerFireDateWithNormalPlayback;
@property(nonatomic) _Bool timerRunning; // @synthesize timerRunning=_timerRunning;
@property(nonatomic) struct CGSize playerContentSize; // @synthesize playerContentSize=_playerContentSize;
@property(nonatomic) double currentItemDuration; // @synthesize currentItemDuration=_currentItemDuration;
@property(retain, nonatomic) TFNTwitterAVPlayerControllerVideo *video; // @synthesize video=_video;
@property(nonatomic) _Bool didPlaybackStall; // @synthesize didPlaybackStall=_didPlaybackStall;
@property(readonly, nonatomic) __weak id <TFNTwitterAVPlayerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) float currentRate; // @synthesize currentRate=_currentRate;
@property(nonatomic) double furthestPlaybackTime; // @synthesize furthestPlaybackTime=_furthestPlaybackTime;
@property(nonatomic) double accumulativeContinuousPlaybackTime; // @synthesize accumulativeContinuousPlaybackTime=_accumulativeContinuousPlaybackTime;
- (void).cxx_destruct;
- (void)playerRequestDidFinish:(id)arg1;
- (void)playbackDidProgressToTime:(double)arg1 withIncrement:(double)arg2;
- (void)_playbackDidStall;
- (void)playbackDidFinish;
- (void)_timerTick:(id)arg1;
- (void)_stopTimeObserver;
- (void)_startTimeObserver;
- (void)_startDurationKVO;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (float)volume;
- (void)setVolume:(float)arg1;
- (void)play;
- (void)pause;
- (void)replaceCurrentItemWithPlayerItem:(id)arg1;
- (void)dispose;
- (void)playbackDidScrub;
@property(readonly, nonatomic) double currentPlaybackTime;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1 playerItem:(id)arg2;

@end

