//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <T1Twitter/TFNTwitterStream.h>

#import <T1Twitter/TFNTwitterGenericTimelineStream-Protocol.h>

@class NSArray, NSError, NSMutableSet, TFNTwitterActivityAlert, TFNTwitterDummyErrorActivityItem, TFSDeferrableTimer;
@protocol TFNTwitterActivityStreamDisplayDelegate;

@interface TFNTwitterActivityStream : TFNTwitterStream <TFNTwitterGenericTimelineStream>
{
    TFNTwitterDummyErrorActivityItem *_errorItem;
    _Bool _needsSerialization;
    _Bool _isPendingRefresh;
    _Bool _loadConservatively;
    _Bool _useVITNotificationsSettings;
    _Bool _isLoadingTop;
    _Bool _isLoadingBottom;
    _Bool _isAtEnd;
    NSArray *_streamItems;
    long long _sourceType;
    long long _filterType;
    long long _antispamConnectTweetCount;
    long long _antispamConnectUserCount;
    id <TFNTwitterActivityStreamDisplayDelegate> _displayDelegate;
    TFNTwitterActivityAlert *_alert;
    TFSDeferrableTimer *_deferrableStreamUpdateTimer;
    NSError *_loadTopError;
    NSError *_loadBottomError;
    NSMutableSet *_loadingGaps;
}

+ (unsigned long long)apiVersionForAccount:(id)arg1;
@property(readonly, nonatomic) NSMutableSet *loadingGaps; // @synthesize loadingGaps=_loadingGaps;
@property(nonatomic) _Bool isAtEnd; // @synthesize isAtEnd=_isAtEnd;
@property(retain, nonatomic) NSError *loadBottomError; // @synthesize loadBottomError=_loadBottomError;
@property(retain, nonatomic) NSError *loadTopError; // @synthesize loadTopError=_loadTopError;
@property(nonatomic) _Bool isLoadingBottom; // @synthesize isLoadingBottom=_isLoadingBottom;
@property(nonatomic) _Bool isLoadingTop; // @synthesize isLoadingTop=_isLoadingTop;
@property(retain, nonatomic) TFSDeferrableTimer *deferrableStreamUpdateTimer; // @synthesize deferrableStreamUpdateTimer=_deferrableStreamUpdateTimer;
@property(readonly, nonatomic) TFNTwitterActivityAlert *alert; // @synthesize alert=_alert;
@property(nonatomic) __weak id <TFNTwitterActivityStreamDisplayDelegate> displayDelegate; // @synthesize displayDelegate=_displayDelegate;
@property(readonly, nonatomic) long long antispamConnectUserCount; // @synthesize antispamConnectUserCount=_antispamConnectUserCount;
@property(readonly, nonatomic) long long antispamConnectTweetCount; // @synthesize antispamConnectTweetCount=_antispamConnectTweetCount;
@property(nonatomic) _Bool useVITNotificationsSettings; // @synthesize useVITNotificationsSettings=_useVITNotificationsSettings;
@property(nonatomic) long long filterType; // @synthesize filterType=_filterType;
@property(nonatomic) _Bool loadConservatively; // @synthesize loadConservatively=_loadConservatively;
@property(nonatomic) long long sourceType; // @synthesize sourceType=_sourceType;
@property(retain, nonatomic) NSArray *streamItems; // @synthesize streamItems=_streamItems;
@property(nonatomic) _Bool isPendingRefresh; // @synthesize isPendingRefresh=_isPendingRefresh;
@property(nonatomic) _Bool needsSerialization; // @synthesize needsSerialization=_needsSerialization;
- (void).cxx_destruct;
- (void)_addErrorItemWithMessage:(id)arg1 andSubMessage:(id)arg2 actionBlock:(CDUnknownBlockType)arg3;
- (id)_errorItem;
- (_Bool)loadGap:(id)arg1 withSource:(long long)arg2;
- (id)_removeAdjacentDuplicateStatusItemsFromArray:(id)arg1;
- (id)_removeDummyItemsFromStreamItems:(id)arg1;
- (id)_userIDsForMostRecentStreamItemsWithMaxTweetingUsers:(unsigned long long)arg1 maxNonTweetingUsers:(unsigned long long)arg2;
- (id)_filterStatus:(id)arg1 fromStreamItems:(id)arg2;
- (id)_filterUsersWithIDs:(id)arg1 fromStreamItems:(id)arg2;
- (void)_blockedAccountsDidChange:(id)arg1;
- (void)_didDeleteStatus:(id)arg1;
- (id)_oldestItem;
- (unsigned long long)_filterForType;
- (id)itemsToBeSerialized;
- (unsigned long long)numberOfStreamItemsNewerThan:(id)arg1;
- (void)filterSpamFromStreamWithCompletion:(CDUnknownBlockType)arg1;
- (long long)countParameter;
- (_Bool)supportsAggregation;
- (void)postUpdateNotificationWithUserInfo:(id)arg1;
- (_Bool)shouldPersistScrollPosition;
- (id)autosaveName;
- (void)removeActivitiesInStreamFromUser:(id)arg1;
- (_Bool)isLoadingGap:(id)arg1;
- (_Bool)isLoadingGap;
- (_Bool)isEmpty;
- (id)aggregateIncomingStreamItems:(id)arg1 withBelowActivity:(id)arg2;
- (id)aggregateIncomingStreamItems:(id)arg1 withAboveActivity:(id)arg2;
- (id)streamItemsByAddingActivities:(id)arg1 genericNotifications:(id)arg2 toStreamItems:(id)arg3 newerThan:(id)arg4 source:(long long)arg5 countParameter:(long long)arg6 gap:(id)arg7 pagination:(id)arg8 addedStreamItems:(inout id *)arg9 isAtEnd:(inout _Bool *)arg10;
- (void)_addActivities:(id)arg1 genericNotifications:(id)arg2 pagination:(id)arg3 newerThan:(id)arg4 source:(long long)arg5 countParameter:(long long)arg6 gap:(id)arg7;
- (_Bool)loadBottomWithSource:(long long)arg1;
- (id)refreshSinceID;
- (id)activityAPIVersion;
- (void)clearAlert;
- (_Bool)loadTopWithSource:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)loadNewerWithSource:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)loadOlderWithSinceID:(id)arg1 maxID:(id)arg2 count:(id)arg3 source:(long long)arg4 responseBlock:(CDUnknownBlockType)arg5;
- (void)loadNewerWithSinceID:(id)arg1 count:(id)arg2 source:(long long)arg3 responseBlock:(CDUnknownBlockType)arg4;
- (void)reset;
- (void)setAlert:(id)arg1;
- (id)serializationDictionaryValue;
- (id)initWithAccount:(id)arg1 serializationDictionary:(id)arg2 antispamConnectTweetCount:(long long)arg3 antispamConnectUserCount:(long long)arg4;

@end

