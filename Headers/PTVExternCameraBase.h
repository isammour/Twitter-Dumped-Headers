//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <PeriscopeViewer/LHLSRenderDelegate-Protocol.h>
#import <PeriscopeViewer/PTVSAudioCaptureDelegate-Protocol.h>
#import <PeriscopeViewer/PTVVideoSource-Protocol.h>

@class CALayer, NSData, NSDictionary, NSString, PTVRTMPAudioTranscode, PTVSAudioCapture, PTVVTDecoder;
@protocol OS_dispatch_queue, PTVVideoSourceDelegate;

@interface PTVExternCameraBase : NSObject <PTVVideoSource, LHLSRenderDelegate, PTVSAudioCaptureDelegate>
{
    struct CGSize _actualSize;
    long long _orientation;
    NSObject<OS_dispatch_queue> *_audioQueue;
    NSObject<OS_dispatch_queue> *_videoQueue;
    _Bool _usingLocalAudio;
    _Bool _headsetPresent;
    PTVSAudioCapture *_audioIn;
    _Bool _audioTimeOffsetSet;
    double _audioTimeOffset;
    NSData *_audioConfig;
    struct opaqueCMFormatDescription *_audioDesc;
    int _audioFrequency;
    PTVRTMPAudioTranscode *_audioTranscoder;
    NSData *_configForTranscode;
    NSData *_avcc;
    NSData *_sps;
    NSData *_pps;
    struct CGSize _inputSize;
    struct CGSize _encodedSize;
    struct CGRect _inputRegion;
    struct CGSize _resizerInputSize;
    PTVVTDecoder *_decoder;
    double _cameraOrientation;
    _Bool _cameraValid;
    id _this;
    _Bool previewEnabled;
    _Bool encodingEnabled;
    _Bool enableVideoDecode;
    _Bool enableVideoEncode;
    _Bool enableVideoRender;
    _Bool enableResize;
    _Bool timerPending;
    _Bool dataReceived;
    _Bool dataReceivedSinceLast;
    _Bool mute;
    _Bool audioPresent;
    _Bool is360;
    _Bool _transcodeAudio;
    int audioRate;
    NSObject<PTVVideoSourceDelegate> *delegate;
    double lastVideoPTS;
    double frameRate;
    NSDictionary *_metadata;
    struct CGSize requestedSize;
}

+ (_Bool)isExternalMic;
@property _Bool transcodeAudio; // @synthesize transcodeAudio=_transcodeAudio;
@property(readonly) NSDictionary *metadata; // @synthesize metadata=_metadata;
@property _Bool is360; // @synthesize is360;
@property(readonly) struct CGSize previewSize; // @synthesize previewSize=_inputSize;
@property struct CGSize requestedSize; // @synthesize requestedSize;
@property(readonly) struct CGSize imageSize; // @synthesize imageSize=_actualSize;
@property(readonly) _Bool audioPresent; // @synthesize audioPresent;
@property int audioRate; // @synthesize audioRate;
@property _Bool mute; // @synthesize mute;
@property(readonly) double frameRate; // @synthesize frameRate;
@property _Bool dataReceivedSinceLast; // @synthesize dataReceivedSinceLast;
@property _Bool dataReceived; // @synthesize dataReceived;
@property _Bool timerPending; // @synthesize timerPending;
@property _Bool enableResize; // @synthesize enableResize;
@property _Bool enableVideoRender; // @synthesize enableVideoRender;
@property _Bool enableVideoEncode; // @synthesize enableVideoEncode;
@property _Bool enableVideoDecode; // @synthesize enableVideoDecode;
@property double lastVideoPTS; // @synthesize lastVideoPTS;
@property int audioFrequency; // @synthesize audioFrequency=_audioFrequency;
@property _Bool encodingEnabled; // @synthesize encodingEnabled;
@property _Bool previewEnabled; // @synthesize previewEnabled;
@property(retain) NSObject<PTVVideoSourceDelegate> *delegate; // @synthesize delegate;
- (void).cxx_destruct;
- (void)setCameraPosition:(long long)arg1;
- (_Bool)canSwitchToPosition:(long long)arg1;
@property _Bool cameraValid;
@property float zoomFactor;
@property(readonly) _Bool hasOpticalZoom;
- (void)calcZoomRect;
- (_Bool)onKeepAlive;
- (void)keepAliveTimer;
@property(readonly) int cameraType;
@property(readonly) long long cameraState;
@property(readonly) double cameraOrientation;
@property(readonly) _Bool suppliesOrientation;
- (void)handleInterfaceOrientation:(long long)arg1;
- (_Bool)setInterfaceOrientation:(long long)arg1;
- (void)shutdown;
- (void)startShutdown;
- (void)resumeCapture;
- (void)pauseCapture;
- (_Bool)startEncoding;
- (void)resetFocusAndExposure;
@property(readonly, nonatomic) long long preferredOrientation;
@property(readonly, nonatomic) _Bool rotatesWithDevice;
@property(readonly) _Bool canSetFocusPoint;
- (void)setFocusAndExposure:(struct CGPoint)arg1;
- (void)startCamera;
- (void)onEndOfStream;
- (void)onEndPending;
- (void)onTargetBuffer:(double)arg1;
- (void)onMetadata:(id)arg1 renderTime:(double)arg2;
- (void)audioPlaying:(_Bool)arg1;
- (void)videoStarted;
- (void)setLayer:(id)arg1;
- (void)forceRestart;
- (void)audioMuted:(_Bool)arg1;
- (void)onVideo:(struct __CVBuffer *)arg1 atTime:(double)arg2;
- (void)setVideoWidth:(double)arg1 andHeight:(double)arg2;
- (void)startVideoDecoding;
- (void)onUncompressedSample:(struct opaqueCMSampleBuffer *)arg1;
- (void)onUncompressedVideo:(struct __CVBuffer *)arg1 atTime:(double)arg2;
- (void)onCompressedVideo:(id)arg1 time:(double)arg2 decodeAt:(double)arg3;
- (void)setVideoDimensions:(struct CGSize)arg1;
- (void)configureDecoderWithSps:(id)arg1 pps:(id)arg2;
- (void)audioData:(id)arg1 time:(double)arg2;
- (void)audioFormat:(id)arg1;
- (void)checkLocalAudio;
- (void)startAudioEncoding;
- (void)deliverAudioData:(id)arg1 time:(double)arg2;
- (void)createAudioInput:(id)arg1 sampleRate:(int)arg2;
- (void)onExternalAudioFormat:(id)arg1 sampleFrequency:(int)arg2;
- (void)createAudioTranscoder;
- (void)onExternalAudio:(id)arg1 pts:(double)arg2;
- (struct opaqueCMFormatDescription *)audioEncoderFormat;
- (void)audioRouteChangeListenerCallback:(id)arg1;
- (void)setUsingLocalAudio:(_Bool)arg1;
@property(readonly) _Bool usingLocalAudio;
- (void)shutdownLocalAudio;
- (void)createLocalAudio;
- (void)stopAudio;
- (void)startAudio;
- (void)requestAudioFrequency:(int)arg1;
- (_Bool)alwaysUseDeviceAudio;
- (_Bool)hasDeviceAudio;
- (void)dealloc;
- (id)initForSize:(struct CGSize)arg1;
@property(readonly, nonatomic) CALayer *lowLatencyPreviewLayer;

// Remaining properties
@property(readonly) long long captureOrientation;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) _Bool receivingSilentAudio;
@property(readonly) Class superclass;

@end

