//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import <T1Twitter/TFNTwitterAVPlayerDelegate-Protocol.h>
#import <T1Twitter/UIGestureRecognizerDelegate-Protocol.h>

@class AVPlayerItem, NSMutableDictionary, NSMutableSet, NSNumber, NSString, TAVAudioSessionModeToken, TFNAVPlayerView, TFNTwitterAVConfiguration, TFNTwitterAVPlayer, TFNTwitterAVPlayerControllerObserverGroup, TFNTwitterAVPlayerControllerPausingNotificationObserver, TFNTwitterAVPlayerControllerSession, TFNTwitterAVPlayerControllerVideo, TFNTwitterAVPlayerRequest, TFNTwitterAccount, TFNTwitterDynamicVideoAd, TFNTwitterDynamicVideoAdManager, TFNTwitterDynamicVideoAdResponseItem, TFSKVODispatcher, TFSTwitterScribeContext, UIView;
@protocol TFNTwitterAVPlayerControllerDelegate, TFNTwitterAVPlayerSessionSource;

@interface TFNTwitterAVPlayerController : NSObject <TFNTwitterAVPlayerDelegate, UIGestureRecognizerDelegate>
{
    _Bool _scrubbing;
    _Bool _didDispose;
    _Bool _playbackDidComplete;
    _Bool _playbackDidStart;
    _Bool _playingDesired;
    _Bool _didCompletePreparingForPlayback;
    _Bool _muted;
    _Bool _fullscreen;
    _Bool _allowsExternalPlayback;
    _Bool _videoGravityOverriden;
    _Bool _didDisposeCurrentAVPlayerAndItems;
    _Bool _didStartPreparingForPlayback;
    TFSTwitterScribeContext *_scribeContext;
    id <TFNTwitterAVPlayerControllerDelegate> _delegate;
    NSString *_scribeElement;
    long long _mode;
    TFNTwitterAccount *_account;
    TFNTwitterAVConfiguration *_configuration;
    TFNTwitterAVPlayer *_currentAVPlayer;
    TFNTwitterAVPlayerControllerSession *_session;
    TFNTwitterAVPlayerControllerVideo *_currentVideo;
    TFNTwitterAVPlayerControllerVideo *_adVideo;
    double _currentPreferredPeakBitRate;
    TFNAVPlayerView *_playerView;
    long long _type;
    TFNTwitterAVPlayerRequest *_avPlayerRequest;
    id _adReceivedNotificationObserver;
    id _adNotReceivedNotificationObserver;
    TFNTwitterDynamicVideoAdResponseItem *_adResponseItem;
    NSNumber *_intentToPlayTime;
    NSNumber *_precisePlaybackStartTime;
    NSNumber *_approximatePlaybackStartTime;
    TAVAudioSessionModeToken *_audioSessionModeToken;
    NSMutableDictionary *_playerItemNotificationObservers;
    id _playerItemTimebaseNotificationObserver;
    NSMutableSet *_playerItemKVODispatchers;
    TFSKVODispatcher *_loadedTimeRangesKVODispatcher;
    NSMutableSet *_playerKVODispatchers;
    NSMutableSet *_timeObservers;
    AVPlayerItem *_suspendedItem;
    UIView *_avPlayerLayerStagingArea;
    TFNTwitterAVPlayerControllerPausingNotificationObserver *_appWillResignActiveObserver;
    TFNTwitterAVPlayerControllerPausingNotificationObserver *_interactivePopObserver;
    NSNumber *_oldItemRate;
    TFNTwitterAVPlayerControllerObserverGroup *_observerGroup;
}

+ (id)tfn_AVFoundationLockingQueue;
+ (id)_tfn_playerControllerWithLiveVideoEvent:(id)arg1 account:(id)arg2 configuration:(id)arg3 session:(id)arg4;
+ (void)addScribeObservers:(id)arg1 toSession:(id)arg2 configuration:(id)arg3;
+ (_Bool)supportsMediaAsset:(id)arg1;
+ (id)playerControllerWithDynamicAdResponseItem:(id)arg1 source:(id)arg2 account:(id)arg3 configuration:(id)arg4;
+ (void)fetchDynamicAdAndCreatePlayerControllerForStatusIfNecessary:(id)arg1 withAccount:(id)arg2 configuration:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
+ (id)playerControllerWithLiveVideoEvent:(id)arg1 account:(id)arg2 configuration:(id)arg3;
+ (id)playerControllerWithMediaAsset:(id)arg1 account:(id)arg2 configuration:(id)arg3;
+ (id)playerControllerWithMediaEntity:(id)arg1 account:(id)arg2 configuration:(id)arg3;
+ (id)playerControllerWithStatus:(id)arg1 account:(id)arg2 configuration:(id)arg3;
+ (id)playerControllerWithSessionSource:(id)arg1 account:(id)arg2 configuration:(id)arg3;
@property(readonly, nonatomic) TFNTwitterAVPlayerControllerObserverGroup *observerGroup; // @synthesize observerGroup=_observerGroup;
@property(nonatomic) _Bool didStartPreparingForPlayback; // @synthesize didStartPreparingForPlayback=_didStartPreparingForPlayback;
@property(readonly, nonatomic) NSNumber *oldItemRate; // @synthesize oldItemRate=_oldItemRate;
@property(retain, nonatomic) TFNTwitterAVPlayerControllerPausingNotificationObserver *interactivePopObserver; // @synthesize interactivePopObserver=_interactivePopObserver;
@property(retain, nonatomic) TFNTwitterAVPlayerControllerPausingNotificationObserver *appWillResignActiveObserver; // @synthesize appWillResignActiveObserver=_appWillResignActiveObserver;
@property(retain, nonatomic) UIView *avPlayerLayerStagingArea; // @synthesize avPlayerLayerStagingArea=_avPlayerLayerStagingArea;
@property(retain, nonatomic) AVPlayerItem *suspendedItem; // @synthesize suspendedItem=_suspendedItem;
@property(retain, nonatomic) NSMutableSet *timeObservers; // @synthesize timeObservers=_timeObservers;
@property(retain, nonatomic) NSMutableSet *playerKVODispatchers; // @synthesize playerKVODispatchers=_playerKVODispatchers;
@property(retain, nonatomic) TFSKVODispatcher *loadedTimeRangesKVODispatcher; // @synthesize loadedTimeRangesKVODispatcher=_loadedTimeRangesKVODispatcher;
@property(retain, nonatomic) NSMutableSet *playerItemKVODispatchers; // @synthesize playerItemKVODispatchers=_playerItemKVODispatchers;
@property(retain, nonatomic) id playerItemTimebaseNotificationObserver; // @synthesize playerItemTimebaseNotificationObserver=_playerItemTimebaseNotificationObserver;
@property(retain, nonatomic) NSMutableDictionary *playerItemNotificationObservers; // @synthesize playerItemNotificationObservers=_playerItemNotificationObservers;
@property(retain, nonatomic) TAVAudioSessionModeToken *audioSessionModeToken; // @synthesize audioSessionModeToken=_audioSessionModeToken;
@property(nonatomic) _Bool didDisposeCurrentAVPlayerAndItems; // @synthesize didDisposeCurrentAVPlayerAndItems=_didDisposeCurrentAVPlayerAndItems;
@property(retain, nonatomic) NSNumber *approximatePlaybackStartTime; // @synthesize approximatePlaybackStartTime=_approximatePlaybackStartTime;
@property(retain, nonatomic) NSNumber *precisePlaybackStartTime; // @synthesize precisePlaybackStartTime=_precisePlaybackStartTime;
@property(retain, nonatomic) NSNumber *intentToPlayTime; // @synthesize intentToPlayTime=_intentToPlayTime;
@property(retain, nonatomic) TFNTwitterDynamicVideoAdResponseItem *adResponseItem; // @synthesize adResponseItem=_adResponseItem;
@property(readonly, nonatomic) id adNotReceivedNotificationObserver; // @synthesize adNotReceivedNotificationObserver=_adNotReceivedNotificationObserver;
@property(readonly, nonatomic) id adReceivedNotificationObserver; // @synthesize adReceivedNotificationObserver=_adReceivedNotificationObserver;
@property(nonatomic) _Bool videoGravityOverriden; // @synthesize videoGravityOverriden=_videoGravityOverriden;
@property(retain, nonatomic) TFNTwitterAVPlayerRequest *avPlayerRequest; // @synthesize avPlayerRequest=_avPlayerRequest;
@property(readonly, nonatomic) long long type; // @synthesize type=_type;
@property(nonatomic) _Bool allowsExternalPlayback; // @synthesize allowsExternalPlayback=_allowsExternalPlayback;
@property(nonatomic, getter=isFullscreen) _Bool fullscreen; // @synthesize fullscreen=_fullscreen;
@property(nonatomic, getter=isMuted) _Bool muted; // @synthesize muted=_muted;
@property(nonatomic) _Bool didCompletePreparingForPlayback; // @synthesize didCompletePreparingForPlayback=_didCompletePreparingForPlayback;
@property(nonatomic) _Bool playingDesired; // @synthesize playingDesired=_playingDesired;
@property(readonly, nonatomic) TFNAVPlayerView *playerView; // @synthesize playerView=_playerView;
@property(nonatomic) _Bool playbackDidStart; // @synthesize playbackDidStart=_playbackDidStart;
@property(nonatomic) _Bool playbackDidComplete; // @synthesize playbackDidComplete=_playbackDidComplete;
@property(nonatomic) _Bool didDispose; // @synthesize didDispose=_didDispose;
@property(nonatomic, getter=isScrubbing) _Bool scrubbing; // @synthesize scrubbing=_scrubbing;
@property(nonatomic) double currentPreferredPeakBitRate; // @synthesize currentPreferredPeakBitRate=_currentPreferredPeakBitRate;
@property(retain, nonatomic) TFNTwitterAVPlayerControllerVideo *adVideo; // @synthesize adVideo=_adVideo;
@property(retain, nonatomic) TFNTwitterAVPlayerControllerVideo *currentVideo; // @synthesize currentVideo=_currentVideo;
@property(readonly, nonatomic) TFNTwitterAVPlayerControllerSession *session; // @synthesize session=_session;
@property(retain, nonatomic) TFNTwitterAVPlayer *currentAVPlayer; // @synthesize currentAVPlayer=_currentAVPlayer;
@property(readonly, nonatomic) TFNTwitterAVConfiguration *configuration; // @synthesize configuration=_configuration;
@property(readonly, nonatomic) TFNTwitterAccount *account; // @synthesize account=_account;
@property(nonatomic) long long mode; // @synthesize mode=_mode;
@property(copy, nonatomic) NSString *scribeElement; // @synthesize scribeElement=_scribeElement;
@property(nonatomic) __weak id <TFNTwitterAVPlayerControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) TFSTwitterScribeContext *scribeContext; // @synthesize scribeContext=_scribeContext;
- (void).cxx_destruct;
- (void)scribeAction:(id)arg1 withElement:(id)arg2 parameters:(id)arg3;
- (void)scribeAction:(id)arg1;
- (void)resumeRenderPipeline;
- (void)suspendRenderPipeline;
- (void)removePlayerObserver:(id)arg1;
- (void)addPlayerObserver:(id)arg1;
- (void)_observeCurrentAVPlayer;
- (void)_unobserveCurrentAVPlayer;
- (void)readCurrentProgramDate:(CDUnknownBlockType)arg1;
- (void)_audioRouteDidChange:(id)arg1;
- (void)attachPlayerLayerToAVPlayer:(id)arg1;
- (_Bool)shouldAttachPlayerLayerBeforeInsertingPlayerItem;
- (_Bool)controllerIsMutedForAVPlayer:(id)arg1;
- (void)avPlayerDidStall:(id)arg1;
- (void)avPlayerDidRecoverFromStall:(id)arg1;
- (void)avPlayerDidFinishPlayback:(id)arg1;
- (void)avPlayer:(id)arg1 playbackTimeDidProgress:(double)arg2 withIncrement:(double)arg3;
- (void)avPlayer:(id)arg1 didError:(id)arg2 withMessage:(id)arg3;
- (void)playerViewDidTap;
@property(readonly, nonatomic) TFNTwitterDynamicVideoAdManager *dynamicAdManger;
@property(readonly, nonatomic) NSString *passthroughString;
@property(readonly, nonatomic) TFNTwitterDynamicVideoAd *dynamicAd;
- (_Bool)isAutoplayPlayer;
- (void)endScrubbing;
- (void)beginScrubbing;
@property(readonly, nonatomic, getter=isAtEndTime) _Bool atEndTime;
@property(readonly, nonatomic) double currentDisplayTime;
@property(readonly, nonatomic) double currentPlaybackTime;
@property(readonly, nonatomic) double currentDisplayDuration;
@property(readonly, nonatomic) double currentVideoDuration;
- (void)seekToTime:(double)arg1 completionHandler:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic, getter=isObscuredByOverlappingView) _Bool obscuredByOverlappingView;
@property(readonly, nonatomic) double visibility;
@property(copy, nonatomic) NSString *videoGravity;
@property(readonly, nonatomic) id <TFNTwitterAVPlayerSessionSource> source;
- (void)acquireAudioSessionIfNeeded;
@property(readonly, nonatomic) _Bool playerHasAudio;
- (_Bool)skipAd;
- (void)performPlay;
- (void)performPause;
- (void)performPrepareForPlayback;
- (void)performDispose;
- (void)requestAVPlayerWithProvider:(CDUnknownBlockType)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)setVideoGravity:(id)arg1 animated:(_Bool)arg2;
- (void)updateBasedOnCurrentMode;
- (_Bool)isModeMuted:(long long)arg1;
- (void)retry;
- (void)replay;
@property(readonly, nonatomic) _Bool canReplay;
@property(readonly, nonatomic) _Bool isLive;
- (void)play;
@property(readonly, nonatomic) NSNumber *intentToPlayToPlaybackStartLatencyTimeInterval;
- (void)setIntentToPlayTimeToNow;
- (void)unsetIntentToPlayTime;
- (CDStruct_1b6d18a9)private_maxSeekableTime;
- (void)private_startOrResumePlayback;
- (void)pause;
- (void)notifyDidCompletePreparingForPlayback;
- (void)_didPrepareDynamicAd:(id)arg1;
- (void)_prepareDynamicAd;
- (void)_prepareSessionComplete;
- (void)prepareForPlaybackIfNeeded;
- (void)private_disposeCurrentAVPlayerAndItems;
- (void)_disposeRequest;
- (void)dispose;
- (void)detachPlayerViewAnimated:(_Bool)arg1;
- (id)createPlayerView;
- (void)attachPlayerViewAnimated:(_Bool)arg1;
- (_Bool)private_isPlayerViewAttached;
- (void)dealloc;
- (id)init;
- (id)initWithSession:(id)arg1 account:(id)arg2 configuration:(id)arg3;
@property(nonatomic, getter=areCaptionsEnabled) _Bool captionsEnabled;
@property(readonly, nonatomic) _Bool areCaptionsAvailable;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

