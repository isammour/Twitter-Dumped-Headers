//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import <PeriscopeViewer/PTVEncodedOutputDelegate-Protocol.h>
#import <PeriscopeViewer/PTVRTPStatusDelegate-Protocol.h>
#import <PeriscopeViewer/PTVReachabilityObserver-Protocol.h>
#import <PeriscopeViewer/PTVSketchPointReceivable-Protocol.h>
#import <PeriscopeViewer/PTVSwitchboardDisplayable-Protocol.h>
#import <PeriscopeViewer/PTVVideoSourceDelegate-Protocol.h>

@class CMMotionManager, NSArray, NSData, NSDate, NSDictionary, NSMutableDictionary, NSObject, NSString, NSTimer, PTVAudioSession, PTVBatteryStats, PTVBitrateController, PTVEncodePipeline, PTVPublishLadder;
@protocol OS_dispatch_queue, PTVModelSSLPinningDelegate, PTVMotionDelegate, PTVPublishingViewControllerDebugDelegate, PTVPublishingViewControllerDelegate, PTVRTSPVideoTransmitter, PTVVideoSource;

@interface PTVPublishingViewController : UIViewController <PTVEncodedOutputDelegate, PTVReachabilityObserver, PTVRTPStatusDelegate, PTVSketchPointReceivable, PTVSwitchboardDisplayable, PTVVideoSourceDelegate>
{
    id _weakSelf;
    id <PTVVideoSource> _videoCamera;
    _Bool _running;
    int _inputs;
    int _videoInput;
    int _audioInput;
    struct CGSize _size;
    int _gopLen;
    int _frameRate;
    _Bool _saveAsHQEnabled;
    NSDictionary *_rtspConnect;
    int inputsReceived;
    long long _lastQueueLen;
    NSDate *_lastQueueCheck;
    NSDate *_zeroSentSince;
    _Bool _isUDP;
    NSTimer *_msgTimer;
    _Bool _msgsSeen;
    _Bool _publishing;
    long long _reachStatus;
    long long _availableReachStatus;
    _Bool _shouldMute;
    PTVBitrateController *_bitrateControl;
    _Bool _audioPresent;
    int _bytesPerSecond;
    NSObject<OS_dispatch_queue> *_connectQueue;
    PTVBatteryStats *_batteryStats;
    _Bool _transmitOK;
    NSMutableDictionary *_metadata;
    NSDictionary *_appMetadata;
    _Bool _wasProxyError;
    _Bool _isRecording;
    double _imageRotation;
    CMMotionManager *_motion;
    NSDate *_publishStart;
    double _publishDuration;
    int _idrCount;
    unsigned long long _nInternalReconnectsBeforePublishing;
    NSString *_fmsVer;
    long long _interfaceOrientation;
    int _cameraType;
    int _mostRecentPhoneCamera;
    int _shutdownState;
    CDUnknownBlockType _onShutdown;
    NSTimer *_shutdownTimeout;
    _Bool _isObservingRotation;
    CDUnknownBlockType _stillImageBlock;
    CDUnknownBlockType _pixelBufferCallback;
    _Bool _capturingImage;
    NSData *_videoConfigData;
    NSData *_audioConfigData;
    double _IDRBytes;
    double _totalBytes;
    _Bool _broadcastIsOnline;
    PTVAudioSession *_audioSession;
    _Bool enableStabilisation;
    _Bool _didResignActive;
    _Bool _is360;
    _Bool _isInBackground;
    _Bool _connectionActive;
    _Bool _connectionFailed;
    _Bool _inInternalReconnect;
    _Bool _timerPending;
    _Bool _waitingToRestart;
    _Bool _suspendForSwitch;
    _Bool _hasResetForSilence;
    int _videoBitrateIndex;
    long long _cameraState;
    PTVPublishLadder *_publishLadder;
    id <PTVModelSSLPinningDelegate> _sslPinningDelegate;
    id <PTVPublishingViewControllerDelegate> _delegate;
    id <PTVPublishingViewControllerDebugDelegate> _debugDelegate;
    id <PTVMotionDelegate> _motionDelegate;
    PTVEncodePipeline *_pipeline;
    NSObject<PTVRTSPVideoTransmitter> *_transmitter;
    NSDate *_connectStart;
    NSDate *_lastSRDate;
    NSDate *_lastFrame;
    NSDate *_startSwitchCamera;
    NSDate *_reconnectStart;
    double _lastVideoFramePTS;
    double _lastAngle;
    NSArray *_pspVersion;
    double _initialBandwidth;
}

@property _Bool hasResetForSilence; // @synthesize hasResetForSilence=_hasResetForSilence;
@property _Bool suspendForSwitch; // @synthesize suspendForSwitch=_suspendForSwitch;
@property _Bool waitingToRestart; // @synthesize waitingToRestart=_waitingToRestart;
@property(nonatomic) double initialBandwidth; // @synthesize initialBandwidth=_initialBandwidth;
@property(retain) NSArray *pspVersion; // @synthesize pspVersion=_pspVersion;
@property double lastAngle; // @synthesize lastAngle=_lastAngle;
@property _Bool timerPending; // @synthesize timerPending=_timerPending;
@property double lastVideoFramePTS; // @synthesize lastVideoFramePTS=_lastVideoFramePTS;
@property(retain, nonatomic) NSDate *reconnectStart; // @synthesize reconnectStart=_reconnectStart;
@property(nonatomic) _Bool inInternalReconnect; // @synthesize inInternalReconnect=_inInternalReconnect;
@property(retain) NSDate *startSwitchCamera; // @synthesize startSwitchCamera=_startSwitchCamera;
@property(retain) NSDate *lastFrame; // @synthesize lastFrame=_lastFrame;
@property(retain) NSDate *lastSRDate; // @synthesize lastSRDate=_lastSRDate;
@property(retain) NSDate *connectStart; // @synthesize connectStart=_connectStart;
@property _Bool connectionFailed; // @synthesize connectionFailed=_connectionFailed;
@property _Bool connectionActive; // @synthesize connectionActive=_connectionActive;
@property _Bool isInBackground; // @synthesize isInBackground=_isInBackground;
@property(retain, nonatomic) NSObject<PTVRTSPVideoTransmitter> *transmitter; // @synthesize transmitter=_transmitter;
@property(retain, nonatomic) PTVEncodePipeline *pipeline; // @synthesize pipeline=_pipeline;
@property __weak id <PTVMotionDelegate> motionDelegate; // @synthesize motionDelegate=_motionDelegate;
@property __weak id <PTVPublishingViewControllerDebugDelegate> debugDelegate; // @synthesize debugDelegate=_debugDelegate;
@property __weak id <PTVPublishingViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak id <PTVModelSSLPinningDelegate> sslPinningDelegate; // @synthesize sslPinningDelegate=_sslPinningDelegate;
@property(readonly) _Bool isRecording; // @synthesize isRecording=_isRecording;
@property(nonatomic) int videoBitrateIndex; // @synthesize videoBitrateIndex=_videoBitrateIndex;
@property _Bool is360; // @synthesize is360=_is360;
@property _Bool saveAsHQEnabled; // @synthesize saveAsHQEnabled=_saveAsHQEnabled;
@property(nonatomic) _Bool didResignActive; // @synthesize didResignActive=_didResignActive;
@property(retain, nonatomic) PTVPublishLadder *publishLadder; // @synthesize publishLadder=_publishLadder;
@property(nonatomic) long long cameraState; // @synthesize cameraState=_cameraState;
@property _Bool enableStabilisation; // @synthesize enableStabilisation;
@property(readonly) int mostRecentPhoneCamera; // @synthesize mostRecentPhoneCamera=_mostRecentPhoneCamera;
@property(readonly) int cameraType; // @synthesize cameraType=_cameraType;
- (void).cxx_destruct;
- (void)removeSwitchboardAsset;
- (void)updateSwitchboardAssetAttributes:(struct PTVSwitchboardAssetAttributes)arg1;
- (void)displaySwitchboardAsset:(id)arg1 withAttributes:(struct PTVSwitchboardAssetAttributes)arg2;
@property(readonly) _Bool supportsSketching;
- (void)clearCanvasAnimated:(_Bool)arg1;
- (void)enqueueSketchPoints:(id)arg1;
- (void)requestColorSampleAtNormalizedPoint:(struct CGPoint)arg1 withCallback:(CDUnknownBlockType)arg2;
- (void)createJPEGSnapshot:(CDUnknownBlockType)arg1;
- (void)captureNextSampleBuffer:(CDUnknownBlockType)arg1;
- (_Bool)ptv_isLocalRecordingSupported;
- (void)videoPreviewLayer:(id)arg1;
@property(retain, nonatomic) NSTimer *shutdownTimeout;
- (void)resetFocusAndExposure;
@property(readonly) _Bool canSetFocusPoint;
- (void)setFocusAndExposure:(struct CGPoint)arg1;
@property(nonatomic) _Bool broadcastIsOnline;
- (void)signalEndOfBroadcast;
- (unsigned long long)ntpForCurrentFrame;
- (double)makeNTPfor:(double)arg1;
- (void)sendMetadataImmediate:(_Bool)arg1;
@property(retain) NSDictionary *metadata; // @synthesize metadata=_appMetadata;
@property(readonly) _Bool transmitOK;
- (id)getStatistics;
@property double freeSpaceLimitinMB;
- (_Bool)canSaveToCameraRoll;
- (void)deleteSavedClips;
- (void)combineAndSaveToCameraRoll:(CDUnknownBlockType)arg1;
- (void)finishRecordingWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)startLocalRecording;
- (void)setRecordingDelegate:(id)arg1;
- (id)getClipURLs;
@property int bytesPerSecond;
- (double)videoDuration;
- (void)setAudioPresent:(_Bool)arg1;
- (_Bool)audioPresent;
- (void)setCameraType:(int)arg1;
- (void)broadcastingStarted;
- (void)onMsgTimeout;
- (void)startWatchdogTimer;
- (void)reconnect:(_Bool)arg1;
- (void)internalReconnect:(_Bool)arg1;
- (void)ptv_reconnect:(_Bool)arg1;
- (void)hideVideo;
- (void)ptv_shutdownFromReconnect;
- (void)ptv_shutdown:(CDUnknownBlockType)arg1;
- (void)internalShutdownSync:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)shutdownWithCompletion:(CDUnknownBlockType)arg1;
- (void)shutdown;
- (void)onDrainComplete;
- (void)onShutdownTimeout:(id)arg1;
- (void)cleanEndOfBroadcast:(CDUnknownBlockType)arg1;
- (void)onData:(id)arg1 time:(double)arg2 input:(int)arg3 decodeAt:(double)arg4;
- (void)onBitrateCheck;
- (void)timer;
- (void)addInput:(_Bool)arg1 config:(id)arg2;
- (id)publishingView;
- (void)setMute:(_Bool)arg1;
- (_Bool)mute;
- (void)updateDebugLabel:(id)arg1;
- (void)updateVideoAndAudioBitrate;
- (void)onProxyError;
- (void)onSocketClosed;
- (long long)videoBitRateKilobitsPSec;
- (long long)rotation;
- (void)handleInterfaceOrientation:(long long)arg1;
- (struct CGRect)getVideoPreviewRect;
- (void)viewDidLayoutSubviews;
- (void)ptv_setCameraPosition:(int)arg1;
- (void)ptv_selectNextCamera:(_Bool)arg1;
@property(readonly, nonatomic) _Bool hasMultiplePhoneCameras;
- (_Bool)selectNextPhoneCamera;
- (long long)numberOfSelectableExternalCamerasExcluding360:(_Bool)arg1;
- (_Bool)selectNextExternalCamera;
- (_Bool)switchToExternalCamera;
- (_Bool)switchToPhoneCamera;
- (void)selectNextCamera;
- (void)selectCamera:(int)arg1;
- (void)setCameraPosition:(long long)arg1;
- (void)flip360Preview;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)pipeline:(id)arg1 videoData:(id)arg2 pts:(double)arg3 dts:(double)arg4;
- (void)pipeline:(id)arg1 pushMetadata:(id)arg2 pts:(double)arg3;
- (_Bool)pipeline:(id)arg1 shouldEncodeVideo:(double)arg2;
- (void)pipeline:(id)arg1 audioData:(id)arg2 pts:(double)arg3;
- (void)pipeline:(id)arg1 audioParams:(id)arg2;
- (void)pipeline:(id)arg1 videoParams:(id)arg2;
- (void)pushMetadata:(id)arg1 pts:(double)arg2;
- (void)startVideoEncoding;
- (void)ptv_connect;
- (void)reachabilityMonitorStateDidChange:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)unobserveMotionAndOrientationChanges;
- (void)observeDeviceMotionAndOrientationChanges;
- (void)setPublishing:(_Bool)arg1;
- (_Bool)publishing;
- (void)setTorchMode:(long long)arg1;
- (void)setPhotoFlashMode:(long long)arg1;
- (void)capturePhoto:(CDUnknownBlockType)arg1;
- (void)capture:(CDUnknownBlockType)arg1;
- (void)showVideoViewIfNecessary;
- (void)onAudioData:(id)arg1 pts:(double)arg2;
- (void)source:(id)arg1 audioParams:(id)arg2 format:(struct opaqueCMFormatDescription *)arg3;
- (void)videoSource:(id)arg1 didReceiveMetadataObjects:(id)arg2;
- (void)videoSource:(id)arg1 didReceiveSampleBuffer:(struct opaqueCMSampleBuffer *)arg2;
- (void)source:(id)arg1 videoParams:(id)arg2;
- (void)didChangeLocalAudioSource:(_Bool)arg1 isUsingHeadphones:(_Bool)arg2;
- (void)cameraStartComplete;
- (void)cameraStartFailed;
- (void)createCamera;
- (void)ptv_startCamera;
- (void)connect;
- (void)startLocalCamera;
- (void)startCamera;
@property(readonly) struct CGSize viewSize;
@property(readonly) double viewOrientation;
- (long long)captureOrientation;
- (void)onCameraOrientation:(double)arg1;
- (void)onDeviceRotation:(double)arg1;
- (double)encodedOrientation;
- (void)onOrientation:(id)arg1;
- (void)onEnterBackgroundOrIncomingPhoneCall;
- (void)becomeActive;
- (void)viewDidLoad;
- (void)loadView;
- (void)connect:(id)arg1 port:(unsigned short)arg2 application:(id)arg3 stream:(id)arg4 user:(id)arg5 password:(id)arg6 credential:(id)arg7 protocol:(id)arg8 version:(id)arg9;
- (void)connect:(id)arg1 port:(unsigned short)arg2 application:(id)arg3 stream:(id)arg4 user:(id)arg5 password:(id)arg6 credential:(id)arg7 protocol:(id)arg8;
@property float zoomFactor;
- (_Bool)isVidman;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)dealloc;
- (id)initWithShouldEnableStabilization:(_Bool)arg1 saveAsHQEnabled:(_Bool)arg2 debugDelegate:(id)arg3 sslPinningDelegate:(id)arg4;
- (void)setupPipelineForCurrentBitrate;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

