//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <TFNUI/TFNViewController.h>

#import <T1Twitter/T1AmplifyUIEventHandlerDelegate-Protocol.h>
#import <T1Twitter/T1SlideshowUserListViewControllerDelegate-Protocol.h>
#import <T1Twitter/T1StickerCanvasDelegate-Protocol.h>
#import <T1Twitter/T1VideoBitRateManagerDelegate-Protocol.h>
#import <T1Twitter/TAVPlaybackObserver-Protocol.h>
#import <T1Twitter/TFNImageDisplayViewDelegate-Protocol.h>
#import <T1Twitter/TFNImageDisplayViewDownloadDelegate-Protocol.h>
#import <T1Twitter/TFNLayoutMetricsEnvironment-Protocol.h>
#import <T1Twitter/TFNPresented-Protocol.h>
#import <T1Twitter/TFNTooltipDelegate-Protocol.h>
#import <T1Twitter/TFNTwitterAmplifyPlayerDelegate-Protocol.h>
#import <T1Twitter/TFNTwitterAuthenticated-Protocol.h>
#import <T1Twitter/TFNZoomableImageViewZoomDelegate-Protocol.h>
#import <T1Twitter/TLPSubscriptionDelegate-Protocol.h>
#import <T1Twitter/UIScrollViewDelegate-Protocol.h>

@class CAGradientLayer, NSArray, NSMutableArray, NSString, T1AmplifyUIEventHandler, T1AnimatedGIFImageView, T1NativeCardActivityIndicatorView, T1SlideshowMediaAssetRenderer, T1SlideshowScrollView, T1SlideshowSlide, T1SlideshowStatusView, T1VideoBitRateManager, T1VolumeView, TAVAudioSessionModeToken, TAVPlaybackState, TAVPlayerView, TFNBatteryMonitorHandle, TFNButton, TFNCustomHitTestView, TFNFullscreenMediaTransition, TFNPaddedButton, TFNTwitterAccount, TFNTwitterStatus, TFSTimer, TFSTwitterScribeContext, TLPSubscription, UIImageView, UILabel, UIView, UIViewController;
@protocol T1AutoplayFullscreenCoordinator, T1SlideshowViewControllerDataSource, T1SlideshowViewControllerDelegate, T1SlideshowViewControllerLoadingDelegate, TFNImageTransitionDelegate, TFNTwitterAVPlayerControllerSource;

@interface T1SlideshowViewController : TFNViewController <TFNZoomableImageViewZoomDelegate, T1SlideshowUserListViewControllerDelegate, TFNImageDisplayViewDownloadDelegate, T1AmplifyUIEventHandlerDelegate, T1StickerCanvasDelegate, TFNTooltipDelegate, TLPSubscriptionDelegate, T1VideoBitRateManagerDelegate, UIScrollViewDelegate, TFNPresented, TFNTwitterAuthenticated, TFNLayoutMetricsEnvironment, TFNImageDisplayViewDelegate, TFNTwitterAmplifyPlayerDelegate, TAVPlaybackObserver>
{
    id <T1SlideshowViewControllerDataSource> _retainedDataSource;
    long long _slideCount;
    UIView *_backgroundView;
    UIView *_contentView;
    T1SlideshowScrollView *_scrollView;
    TFNPaddedButton *_closeButton;
    TFNPaddedButton *_moreButton;
    TFNButton *_attributionButton;
    TFNCustomHitTestView *_topChromeView;
    UIView *_fullScreenRasterization;
    long long _fullScreenRasterizationOrientation;
    T1SlideshowSlide *_prevSlide;
    T1SlideshowSlide *_nextSlide;
    UIImageView *_chevronImageView;
    UILabel *_swipeToDismissLabel;
    double _verticalScrollTrackingPercentCentered;
    CAGradientLayer *_tutorialViewGradientLayer;
    T1NativeCardActivityIndicatorView *_spinner;
    double _lastZoomScale;
    _Bool _bottomChromeVisible;
    _Bool _topChromeVisible;
    _Bool _canRequestLoadingMoreSlides;
    _Bool _slideActivated;
    UIViewController *_dismissingFromInHierarchyViewController;
    T1VolumeView *_volumeView;
    NSArray *_volumeViewConstraints;
    struct {
        unsigned int statusViewNeedsUpdate:1;
        unsigned int topChromeNeedsUpdate:1;
        unsigned int dismissing:1;
        unsigned int dismissingFromSwipe:1;
        unsigned int sizeTransitioning:1;
        unsigned int statusViewShownBeforeSizeTransition:1;
        unsigned int topChromeHiddenBeforeSizeTransition:1;
        unsigned int chromesShownBeforeVerticalScroll:1;
        unsigned int chromesShownBeforeReload:1;
        unsigned int timelineStatusViewsDidUpdate:1;
    } _flags;
    _Bool _displaySlideStatus;
    _Bool _displaySlideStatusActions;
    _Bool _notifyListenersBeforeDismissing;
    _Bool _chromeVisible;
    _Bool _stickerInteractionEnabled;
    _Bool _didReturnPlayerToPlayerSource;
    _Bool _lowPowerModeEnabled;
    _Bool _checkBatteryMonitoringExperiment;
    _Bool _vodBackgroundBlurWithLowBatteryEnabled;
    _Bool _blurredVideoBackgroundImageViewInitialState;
    TFNTwitterAccount *_account;
    TFSTwitterScribeContext *_scribeContext;
    T1VideoBitRateManager *_videoBitrateManager;
    id <T1SlideshowViewControllerDelegate> _delegate;
    id <T1SlideshowViewControllerLoadingDelegate> _loadingDelegate;
    id <T1SlideshowViewControllerDataSource> _dataSource;
    long long _slideIndex;
    id <TFNTwitterAVPlayerControllerSource> _playerSource;
    id <T1AutoplayFullscreenCoordinator> _autoplayFullscreenCoordinator;
    long long _cardDisplayMode;
    T1SlideshowSlide *_currentSlide;
    T1SlideshowStatusView *_statusView;
    TFNFullscreenMediaTransition *_transition;
    UIView *_tutorialView;
    T1AmplifyUIEventHandler *_amplifyActionHandler;
    NSString *_previousVideoGravity;
    T1SlideshowMediaAssetRenderer *_mediaAssetRenderer;
    T1AnimatedGIFImageView *_animatedGIFView;
    TAVAudioSessionModeToken *_audioSessionModeToken;
    TLPSubscription *_tlpSubscription;
    TAVPlaybackState *_previousPlaybackState;
    TAVPlayerView *_transitionTAVPlayerView;
    TFNBatteryMonitorHandle *_batteryMonitorHandle;
    UIView *_blurredVideoBackgroundImageView;
    NSMutableArray *_previousBlurredVideoBackgroundViews;
    TFSTimer *_videoImageCaptureTimer;
}

@property(retain, nonatomic) TFSTimer *videoImageCaptureTimer; // @synthesize videoImageCaptureTimer=_videoImageCaptureTimer;
@property(retain, nonatomic) NSMutableArray *previousBlurredVideoBackgroundViews; // @synthesize previousBlurredVideoBackgroundViews=_previousBlurredVideoBackgroundViews;
@property(retain, nonatomic) UIView *blurredVideoBackgroundImageView; // @synthesize blurredVideoBackgroundImageView=_blurredVideoBackgroundImageView;
@property(nonatomic) _Bool blurredVideoBackgroundImageViewInitialState; // @synthesize blurredVideoBackgroundImageViewInitialState=_blurredVideoBackgroundImageViewInitialState;
@property(nonatomic, getter=isVODBackgroundBlurWithLowBatteryEnabled) _Bool vodBackgroundBlurWithLowBatteryEnabled; // @synthesize vodBackgroundBlurWithLowBatteryEnabled=_vodBackgroundBlurWithLowBatteryEnabled;
@property(nonatomic) _Bool checkBatteryMonitoringExperiment; // @synthesize checkBatteryMonitoringExperiment=_checkBatteryMonitoringExperiment;
@property(retain, nonatomic) TFNBatteryMonitorHandle *batteryMonitorHandle; // @synthesize batteryMonitorHandle=_batteryMonitorHandle;
@property(readonly, nonatomic, getter=isLowPowerModeEnabled) _Bool lowPowerModeEnabled; // @synthesize lowPowerModeEnabled=_lowPowerModeEnabled;
@property(retain, nonatomic) TAVPlayerView *transitionTAVPlayerView; // @synthesize transitionTAVPlayerView=_transitionTAVPlayerView;
@property(retain, nonatomic) TAVPlaybackState *previousPlaybackState; // @synthesize previousPlaybackState=_previousPlaybackState;
@property(retain, nonatomic) TLPSubscription *tlpSubscription; // @synthesize tlpSubscription=_tlpSubscription;
@property(retain, nonatomic) TAVAudioSessionModeToken *audioSessionModeToken; // @synthesize audioSessionModeToken=_audioSessionModeToken;
@property(nonatomic) __weak T1AnimatedGIFImageView *animatedGIFView; // @synthesize animatedGIFView=_animatedGIFView;
@property(readonly, nonatomic) T1SlideshowMediaAssetRenderer *mediaAssetRenderer; // @synthesize mediaAssetRenderer=_mediaAssetRenderer;
@property(retain, nonatomic) NSString *previousVideoGravity; // @synthesize previousVideoGravity=_previousVideoGravity;
@property(nonatomic) _Bool didReturnPlayerToPlayerSource; // @synthesize didReturnPlayerToPlayerSource=_didReturnPlayerToPlayerSource;
@property(retain, nonatomic) T1AmplifyUIEventHandler *amplifyActionHandler; // @synthesize amplifyActionHandler=_amplifyActionHandler;
@property(readonly, nonatomic) UIView *tutorialView; // @synthesize tutorialView=_tutorialView;
@property(readonly, nonatomic) TFNFullscreenMediaTransition *transition; // @synthesize transition=_transition;
@property(readonly, nonatomic) T1SlideshowStatusView *statusView; // @synthesize statusView=_statusView;
@property(readonly, nonatomic) T1SlideshowSlide *currentSlide; // @synthesize currentSlide=_currentSlide;
@property(readonly, nonatomic) UIView *fullScreenRasterization; // @synthesize fullScreenRasterization=_fullScreenRasterization;
@property(nonatomic) _Bool stickerInteractionEnabled; // @synthesize stickerInteractionEnabled=_stickerInteractionEnabled;
@property(nonatomic, getter=isChromeVisible) _Bool chromeVisible; // @synthesize chromeVisible=_chromeVisible;
@property(nonatomic) long long cardDisplayMode; // @synthesize cardDisplayMode=_cardDisplayMode;
@property(nonatomic) _Bool notifyListenersBeforeDismissing; // @synthesize notifyListenersBeforeDismissing=_notifyListenersBeforeDismissing;
@property(nonatomic) _Bool displaySlideStatusActions; // @synthesize displaySlideStatusActions=_displaySlideStatusActions;
@property(nonatomic) _Bool displaySlideStatus; // @synthesize displaySlideStatus=_displaySlideStatus;
@property(nonatomic) __weak id <T1AutoplayFullscreenCoordinator> autoplayFullscreenCoordinator; // @synthesize autoplayFullscreenCoordinator=_autoplayFullscreenCoordinator;
@property(nonatomic) __weak id <TFNTwitterAVPlayerControllerSource> playerSource; // @synthesize playerSource=_playerSource;
@property(nonatomic) long long slideIndex; // @synthesize slideIndex=_slideIndex;
@property(nonatomic) __weak id <T1SlideshowViewControllerDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property(nonatomic) __weak id <T1SlideshowViewControllerLoadingDelegate> loadingDelegate; // @synthesize loadingDelegate=_loadingDelegate;
@property(nonatomic) __weak id <T1SlideshowViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) TFSTwitterScribeContext *scribeContext; // @synthesize scribeContext=_scribeContext;
@property(retain, nonatomic) TFNTwitterAccount *account; // @synthesize account=_account;
- (void).cxx_destruct;
- (void)subscription:(id)arg1 didReceiveEvent:(id)arg2;
- (void)amplifyActionHandler:(id)arg1 dismissCurrentViewControllerAndOpenURL:(id)arg2;
- (void)amplifyActionHandler:(id)arg1 dismissAndPresentViewController:(id)arg2;
- (void)updatePreferredPeakBitRate:(id)arg1;
@property(readonly, nonatomic) T1VideoBitRateManager *videoBitrateManager; // @synthesize videoBitrateManager=_videoBitrateManager;
- (void)_t1_updateAudioSessionForPlaybackState:(id)arg1;
- (void)player:(id)arg1 didUpdatePlaybackState:(id)arg2;
- (void)amplifyPlayerPlaybackDidComplete:(id)arg1;
- (void)amplifyPlayer:(id)arg1 videoTypeDidChangeFrom:(long long)arg2 newVideoType:(long long)arg3;
- (_Bool)avPlayerControllerIsObscuredByOverlappingView:(id)arg1;
- (_Bool)avPlayerControllerShouldManagePlayerVolume:(id)arg1;
- (void)avPlayerControllerPlaybackDidResume:(id)arg1;
- (void)avPlayerControllerPlaybackDidPause:(id)arg1;
- (_Bool)avPlayerControllerShouldResumeOnAudioRouteChanges:(id)arg1;
- (_Bool)avPlayerControllerShouldHandleAudioRouteChanges:(id)arg1;
- (void)avPlayerControllerPlaybackDidStart:(id)arg1;
- (void)avPlayerController:(id)arg1 playbackDidProgressToTime:(double)arg2;
- (void)avPlayerController:(id)arg1 didTapPlayerView:(id)arg2;
- (void)avPlayerControllerDidCompletePreparingForPlayback:(id)arg1;
- (double)_viewControllerVisibility;
- (double)avPlayerController:(id)arg1 visibilityPercentageForPlayerView:(id)arg2;
- (void)avPlayerController:(id)arg1 detachPlayerView:(id)arg2 animated:(_Bool)arg3;
- (void)avPlayerController:(id)arg1 attachPlayerView:(id)arg2 animated:(_Bool)arg3;
- (void)layoutMetricsDidChange:(id)arg1;
- (id)_t1_slideForImageDisplayView:(id)arg1;
- (void)imageDisplayView:(id)arg1 didLongPress:(id)arg2;
- (void)slideshowUserListViewController:(id)arg1 didSelectUser:(id)arg2;
- (void)imageDisplayView:(id)arg1 didFailToLoadImageWithError:(id)arg2;
- (void)imageDisplayViewDidSuccessfullyLoadImage:(id)arg1;
- (void)zoomScrollViewDidEndZooming:(id)arg1 withView:(id)arg2 atScale:(double)arg3;
- (void)zoomScrollViewWillBeginZooming:(id)arg1 withView:(id)arg2;
- (_Bool)accessibilityPerformEscape;
- (_Bool)_t1_canHandleViewUserKeyCommand;
- (void)handleViewUserKeyCommand;
- (_Bool)_t1_canHandleBookmarkKeyCommand;
- (void)handleBookmarkKeyCommand;
- (_Bool)_t1_canHandleLikeKeyCommandForUndo:(_Bool)arg1;
- (void)handleLikeKeyCommand;
- (_Bool)_t1_canHandleRetweetKeyCommandForUndo:(_Bool)arg1;
- (void)handleRetweetKeyCommand;
- (_Bool)_t1_canHandleReplyKeyCommand;
- (void)handleReplyKeyCommand;
- (_Bool)_t1_canHandleNextKeyCommand;
- (void)handleNextKeyCommand;
- (_Bool)_t1_canHandlePreviousKeyCommand;
- (void)handlePreviousKeyCommand;
- (void)handleCloseKeyCommand;
- (id)keyCommands;
- (_Bool)canBecomeFirstResponder;
- (id)_t1_loadHighQualityActionItemForImageDisplayView:(id)arg1;
- (_Bool)_t1_shouldDisplayLoadHighQualityImageItemForImageDisplayView:(id)arg1;
- (id)_t1_saveImageActionItemWithTitle:(id)arg1 forImageDisplayView:(id)arg2;
- (void)_t1_presentShareViaActivityControllerForImageDisplayView:(id)arg1 withSource:(id)arg2;
- (id)_t1_shareViaActionItemForDisplayView:(id)arg1 source:(id)arg2;
- (void)_t1_didTapAttributionButton;
- (void)_t1_dismissAnimated:(_Bool)arg1;
- (void)_t1_moreActionForDisplayView:(id)arg1 source:(id)arg2;
- (void)_t1_moreAction:(id)arg1;
- (void)_t1_closeAction:(id)arg1;
- (void)_t1_tapAction:(id)arg1 gestureRecognizer:(id)arg2;
- (void)_t1_tapAction:(id)arg1;
- (void)_tavTapAction:(id)arg1;
@property(readonly, nonatomic, getter=isTapPlayOrPause) _Bool tapPlayOrPause;
- (double)_backgroundViewAlphaForVerticalScrollWithPercentCentered:(double)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)_advanceOrDismissScrollView:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)_cancelUserSwipeGesture;
- (void)_dismissSlideshowFromSwipe;
- (_Bool)_shouldShowStatusViewContent;
- (_Bool)_chromesVisible;
- (void)_setStatusViewContentVisible:(_Bool)arg1 tutorialVisible:(_Bool)arg2;
- (void)_setStatusViewContentVisible:(_Bool)arg1;
- (void)_setBottomChromeVisible:(_Bool)arg1 animated:(_Bool)arg2 tutorialVisible:(_Bool)arg3;
- (void)_setTopChromeViewVisible:(_Bool)arg1 move:(_Bool)arg2;
- (void)_setTopChromeViewVisible:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_setChromesVisible:(_Bool)arg1 topAnimated:(_Bool)arg2 bottomAnimated:(_Bool)arg3;
- (void)_setChromesVisible:(_Bool)arg1 topAnimated:(_Bool)arg2 bottomAnimated:(_Bool)arg3 tutorialVisible:(_Bool)arg4;
- (struct CGAffineTransform)_transformForFullscreenRasterizationWithInterfaceOrientation:(long long)arg1;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (_Bool)shouldAutorotate;
- (unsigned long long)supportedInterfaceOrientations;
- (void)presentTaggedUserListView;
- (void)_didTapTag:(id)arg1;
- (void)tfn_previewingStateDidChange;
@property(readonly, nonatomic, getter=isCurrentSlideVideo) _Bool currentSlideVideo;
@property(readonly, nonatomic, getter=isBottomSafeAreaIgnored) _Bool bottomSafeAreaIgnored;
- (_Bool)prefersHomeIndicatorAutoHidden;
- (void)viewDidLayoutSubviews;
- (void)willTransitionToTraitCollection:(id)arg1 withTransitionCoordinator:(id)arg2;
- (void)_updateVolumeViewConstraints:(id)arg1;
- (void)updateViewConstraints;
- (void)viewDidLoad;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (_Bool)prefersStatusBarHidden;
- (id)_transitionObject;
- (void)dismissAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)presentFromViewController:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
@property(nonatomic) __weak id <TFNImageTransitionDelegate> transitionDelegate;
- (id)scribeElement;
- (id)scribeComponent;
- (id)scribeSection;
- (id)scribePage;
- (id)scribeImpressionParameters;
- (id)scribe;
- (void)_configureAnimatedGIFView;
- (void)_playAnimatedGIF:(id)arg1;
- (void)_deactivateMediaAssetPlayers;
- (long long)_slideIndexForCurrentScrollContentOffset;
- (id)_t1_attributionButtonAttributedTitleForMediaEntity:(id)arg1;
- (void)_activateLoadingSpinnerSlide;
- (id)_newFullscreenPlayerControllerForMediaAsset:(id)arg1;
- (id)_newFullscreenPlayerControllerForMediaEntity:(id)arg1;
- (id)_newFullscreenPlayerControllerForStatus:(id)arg1;
- (id)_newFullscreenPlayerControllerForCurrentSlide;
- (void)_updateWithPlayerView:(id)arg1 isPlaying:(_Bool)arg2 animated:(_Bool)arg3;
- (id)_tavSessionSourceForCurrentSlide;
- (id)_tavPlayerViewConfigurationWithScribeContext:(id)arg1;
- (id)_tavPlayerViewConfigurationWithScribeContext:(id)arg1 videoGravity:(long long)arg2 isMuted:(_Bool)arg3;
- (void)_updateControlBarWithPlaybackState:(id)arg1;
- (_Bool)_shouldShowControlBarForSlide:(id)arg1;
- (_Bool)_shouldShowStatusForSlide:(id)arg1 numberOfSlides:(long long)arg2 sessionSource:(id)arg3 account:(id)arg4;
- (void)_playWithTAVCorePlayerForCurrentSlide;
- (_Bool)_shouldUseTAVCoreForPlaybackForSlide:(id)arg1;
- (void)_playWithTwitterAVPlayerForCurrentSlide;
- (void)_activateCurrentSlidePlayer;
- (void)_activateCurrentSlide;
- (void)_activateFirstSlide;
- (void)_deactivateCurrentSlide;
- (void)_addSpinnerToView:(id)arg1;
- (void)_hideSpinner;
- (void)_showSpinner;
- (_Bool)_currentSlideCanShowSpinner;
- (_Bool)_currentSlideIsLoading;
- (_Bool)_hideLoadingIndicator;
- (void)stickerCanvas:(id)arg1 didTapSticker:(id)arg2;
- (void)tooltipDidTap:(id)arg1;
- (void)_dismissTooltip:(id)arg1 ifVisibleAnimated:(_Bool)arg2;
- (void)_showStickerTooltip;
- (void)_setUpStickerTooltip;
- (void)_animateStickersIfReadyWithDelay:(_Bool)arg1;
- (void)_hideStickerCanvasForSlide:(id)arg1;
- (void)_updateStickerCanvasFrameForSlide:(id)arg1 atIndex:(long long)arg2;
- (void)_t1_addTLPSubscriptionIfNeeded;
- (long long)_maximumSlideIndexWithLoading:(_Bool)arg1;
- (long long)_maximumSlideIndex;
- (void)_updateSlideDisplayResettingOffset:(_Bool)arg1 animateOffset:(_Bool)arg2 animateStatus:(_Bool)arg3;
- (void)_setStatusViewNeedsUpdateForDisplayedStatus:(id)arg1 displayedMedia:(id)arg2 directMessagePlayable:(id)arg3 displayedTagSet:(id)arg4;
- (void)_updateSlideIndex:(long long)arg1 resettingOffset:(_Bool)arg2 animateOffset:(_Bool)arg3 animateStatus:(_Bool)arg4;
- (void)_applyPlacedStickers:(id)arg1 toSlide:(id)arg2 atIndex:(long long)arg3;
- (void)_configureSlide:(id)arg1 atIndex:(long long)arg2;
- (void)_configureSlides;
- (void)_updateBlurredVideoBackgroundImageView:(id)arg1 duration:(double)arg2;
- (void)_showBlurredVideoBackgroundImage:(id)arg1 duration:(double)arg2;
- (void)_resetBlurredVideoBackgroundImageView;
- (void)_setTransitionBackgroundBlurViewWithPreviewImage:(id)arg1;
- (id)_createTransitionBackgroundBlurView;
- (void)_stopCapturingStillImagesOfVideoPlayer;
- (void)_startCapturingStillImagesOfVideoPlayer:(id)arg1 previewImage:(id)arg2;
- (void)_updateBackgroundColorsWithColor:(id)arg1;
- (void)_configureBackgroundColor;
- (id)_backgroundColorForSlideAtIndex:(long long)arg1;
- (double)_defaultZoomScaleForSlideAtIndex:(long long)arg1;
- (id)_previewImageForSlideAtIndex:(long long)arg1;
- (id)_imageForSlideAtIndex:(long long)arg1;
- (id)_fastestPreviewImageForSlideAtIndex:(long long)arg1;
- (void)reloadSlideshowData;
@property(readonly, nonatomic) TFNTwitterStatus *slideStatus;
- (void)setDataSource:(id)arg1 retain:(_Bool)arg2;
- (void)updateLowPowerModeStatus;
- (void)powerStateDidChange:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)init;
- (id)initWithAccount:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

